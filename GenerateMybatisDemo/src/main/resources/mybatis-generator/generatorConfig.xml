<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="mybatis-generator/mybatisGeneratorinit.properties"></properties>
    <!--一个数据库一个context-->
    <!--defaultModelType="flat" 大数据字段,不分表-->
    <context id="MysqlTables" targetRuntime="MyBatis3" defaultModelType="flat">

        <!--自动识别数据库关键字,默认为false,如果设置为true,根据SqlReservedWords
        中定义的关键字列表:一般保留默认值,遇到数据库关键字(java关键字)使用columnOverride覆盖-->
        <property name="autoDelimitKeywords" value="true"/>
        <!--生成的java文件的编码-->
        <property name="javaFileEncoding" value="utf-8"/>
        <!--beginningDelimiter和endingDelimiter 指明数据库用于标记数据库对象名的符号
        比如:ORACLE就是双引号,mysql默认就是 ` 反引号-->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!--格式化java代码-->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!--格式化xml代码-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!--注释 -->
        <commentGenerator>
            <!--是否取消注释-->
            <property name="suppressAllComments" value="true" />
            <!--是否生成注释代码时间戳-->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 数据库链接URL、用户名、密码 -->
        <jdbcConnection driverClass="${jdbc_driver}"
                        connectionURL="${jdbc_url}"
                        userId="${jdbc_user}"
                        password="${jdbc_password}">
            <!-- <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@localhost:1521:orcl" userId="msa" password="msa"> -->
        </jdbcConnection>
        <javaTypeResolver>
            <!-- 所有decimal类型转换成属性时，为true表示转成BigDecimal类型
            false，可自动转换为以下类型(long int short )
            -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- 实体类地址 -->
        <javaModelGenerator targetPackage="com.wk.generater.demo.entity" targetProject="${models}">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- 生成的xml映射文件包名和位置 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="${resources}">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>
        <!-- 生成DAO的Mapper接口包名和位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.wk.generater.demo.dao"
                             targetProject="${dao}">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!--table可以有多个,每个数据库中的表都可以写一个table,tableName表示
        要匹配的数据库表,也可以在tableName属性中使用%通配符来匹配所有数据库表
        只有匹配的表才会自动生成文件-->
       <!-- <table tableName="%"
               enableCountByExample="true"
               enableDeleteByExample="true"
               enableDeleteByPrimaryKey="true"
               enableSelectByExample="true"
               enableUpdateByExample="true"
               enableSelectByPrimaryKey="true"
               enableUpdateByPrimaryKey="true"
               enableInsert="true"
               selectByExampleQueryId="true">
            <property name="useActualColumnNames" value="false"/>
            &lt;!&ndash;数据库表主键&ndash;&gt;
            <generatedKey column="id" sqlStatement="Mysql" identity="true"></generatedKey>
        </table>-->

        <!--一个表 一个table实例-->
        <!-- 要生成那些表(更改tableName和domainObjectName就可以) -->
        <table tableName="course"
               domainObjectName="Course"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true"
               enableSelectByExample="true"
               selectByExampleQueryId="true" />


    </context>
</generatorConfiguration>